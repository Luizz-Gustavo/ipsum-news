generator client {
  provider = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  name               String    @db.VarChar(125)
  lastName           String    @db.VarChar(125)
  nickname           String    @db.VarChar(100) @unique
  email              String    @unique
  password           String
  role               Role      @relation(fields: [roleId], references: [id])
  roleId             Int
  status             Boolean   @default(true)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  posts              Post[]    @relation("AuthorPosts")
  passwordResetCodes PasswordResetCode[]
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(125)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  slug        String    @unique
  videoLink   String?   @db.Text
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int
  content     String    @db.Text
  imageUrl    String?   @db.Text
  views       Int       @default(0)
  status      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  author      User      @relation("AuthorPosts", fields: [authorId], references: [id])
  authorId    Int

  @@index([title])
  @@index([slug])
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100) @unique
  slug      String   @unique
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
  
  @@index([name])
  @@index([slug])
}

model PasswordResetCode {
  id        Int      @id @default(autoincrement())
  code      String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())
}